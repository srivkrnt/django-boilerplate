# Generated by Django 3.2.8 on 2023-02-21 11:59

import apps.base.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', apps.base.fields.LowerCaseCharField(help_text='Name of the Permission', max_length=50)),
                ('display_name', models.CharField(help_text='Display name of the permission', max_length=50)),
                ('description', models.CharField(default='', help_text='Description for the Permission', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', apps.base.fields.LowerCaseCharField(help_text='Name of the role', max_length=50)),
                ('display_name', models.CharField(help_text='Display name of the role', max_length=50)),
                ('description', models.CharField(default='', help_text='Description for the role', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Stakeholder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', apps.base.fields.LowerCaseCharField(help_text='Name of the stakeholder', max_length=50)),
                ('display_name', models.CharField(help_text='Display name for the stakeholder', max_length=50)),
                ('external_id', models.CharField(help_text='ID that can be used to refer this stakeholder in other systems', max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StakeholderType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', apps.base.fields.LowerCaseCharField(help_text='Name of the stakeholder type', max_length=50)),
                ('description', models.CharField(default='', help_text='Description about the stakeholder type', max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(help_text='First Name of the user', max_length=50)),
                ('last_name', models.CharField(default='', help_text='Last Name of the user', max_length=50)),
                ('email', models.EmailField(help_text='Email of the user', max_length=254, unique=True)),
                ('password', models.CharField(help_text='encrypted password of the user', max_length=255)),
                ('user_type', models.ForeignKey(help_text='Reference to a row in stakeholder-type table, tells what is the type of user', on_delete=django.db.models.deletion.CASCADE, to='accounts.stakeholdertype')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserPlatformAssociation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('external_seller_id', models.CharField(default=None, help_text='ID that can be used to refer a seller platform combination in other systems', max_length=50, null=True)),
                ('platform', models.ForeignKey(help_text='Reference to a row in stakeholder table with user_type as Platform', on_delete=django.db.models.deletion.CASCADE, to='accounts.stakeholder')),
                ('role', models.ForeignKey(help_text='Reference to a row in Role table', on_delete=django.db.models.deletion.CASCADE, to='accounts.role')),
                ('user', models.ForeignKey(help_text='Reference to a row in user table', on_delete=django.db.models.deletion.CASCADE, to='accounts.user')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='stakeholder',
            name='stakeholder_type',
            field=models.ForeignKey(help_text='Reference to a row in stakeholder-type table', on_delete=django.db.models.deletion.CASCADE, to='accounts.stakeholdertype'),
        ),
        migrations.CreateModel(
            name='RolePermissionMap',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('permission', models.ForeignKey(help_text='Reference to a row in permisison table', on_delete=django.db.models.deletion.CASCADE, to='accounts.permission')),
                ('role', models.ForeignKey(help_text='Reference to a row in role table', on_delete=django.db.models.deletion.CASCADE, to='accounts.role')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
